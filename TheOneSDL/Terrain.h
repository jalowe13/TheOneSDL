
#include <deque>
#include <tuple>
#include <map>
#include "Application.h"

#ifndef TERRAIN_HPP
#define TERRAIN_HPP

class Terrain
{
public:
	Terrain(SDL_Renderer* renderer_p);
	~Terrain();
	void generateText(const char* text, int x, int y, int scale);
	bool generateTerrain(SDL_Texture* texture, int x, int y, int layer);
	bool fillScreen();

	// Array Max sizes 800x600
	const static int tilemapY = 19;
	const static int tilemapX = 26;

	// Empty Tilemap template
	char empty_tilemap[tilemapY][tilemapX] = {
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'}
	};
	// Background non interactable tilemap
	char background_tilemap[tilemapY][tilemapX] = {
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'w','w','w','w','w','w','w','w','w','w','w','w','w','g','w','w','w','w','w','w','w','w','w','w','w'},
		{'f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f'},
		{'g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g','g'}
	};
	// Object interactable tilemap (layer 2)
	char obj_tilemap[tilemapY][tilemapX] = {
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','p','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','l','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','t','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'},
		{'~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~','~'}
	};
	//Terrain
	const char* GROUND_TEX = "textures/enviroment/room/ground.bmp";
	const char* FLOOR_TEX = "textures/enviroment/room/floor.bmp";
	const char* WALL_TEX = "textures/enviroment/room/wallcenter.bmp";
	//Transparent Textures
	const char* LAMP_TEX = "textures/enviroment/room/lamp.png";
	const char* TV_TEX = "textures/enviroment/room/tv_fix.png";
	const char* POSTER_TEX = "textures/enviroment/room/floyd_poster.png";


	// Terrain Setters and Getters
	void setTerrain(SDL_Rect* rect)
	{
		terrainList[terrainListSize] = rect;
	}

	void setText(SDL_Texture* texture)
	{
		textList[terrainListSize] = texture;
	}

	SDL_Rect* getTerrain(int i)
	{
		return terrainList[i];
	}

	SDL_Texture* getText(int i)
	{
		return textList[i];
	}

	SDL_Rect* getTextRec(int i)
	{
		return textListRec[i];
	}

	int getTextSize()
	{
		return textListSize;
	}

	int getTerrainSize()
	{
		return terrainListSize;
	}
	int getTerrainCap()
	{
		return terrainListCapacity;
	}

	// Terrain OBJ Setters and Getters
	void setTerrainObj(SDL_Rect* rect)
	{
		terrainObjList[terrainObjListSize] = rect;
	}

	void setTextObj(SDL_Texture* texture)
	{
		textObjList[terrainObjListSize] = texture;
	}

	SDL_Rect* getTerrainObj(int i)
	{
		return terrainObjList[i];
	}

	SDL_Texture* getTextObj(int i)
	{
		return textObjList[i];
	}
	int getTerrainObjSize()
	{
		return terrainObjListSize;
	}


private:
	//insertMap(int x, int y);
	//std::map<int,int>* terrain_p; //Terrain Map 25 tile wide for 800 pix
	//Rectangle List
	int terrainListSize = 0;
	int textListSize = 0;
	int terrainObjListSize = 0;
	int textObjListSize = 0;
	static const int terrainListCapacity = 493; //MAX SIZE
	static const int terrainObjListCapacity = 493; //MAX SIZE

	// Background Terrain
	SDL_Rect* terrainList[terrainListCapacity];
	SDL_Texture* textList[terrainListCapacity]; //Storage of text textures

	// Terrain Objects
	SDL_Rect* terrainObjList[terrainObjListCapacity];
	SDL_Texture* textObjList[terrainObjListCapacity]; //Storage of text textures

	// Text
	SDL_Rect* textListRec[20]; //Storage of text
	// Renderer
	SDL_Renderer* renderer;
};

#endif